{"ast":null,"code":"/** ExpressError extends normal JS error so we can\n *  add a status when we make an instance of it.\n *\n *  The error-handling middleware will return this.\n */\n\nclass ExpressError extends Error {\n  constructor(message, status) {\n    super();\n    this.message = message;\n    this.status = status;\n  }\n}\n\n/** 404 NOT FOUND error. */\n\nclass NotFoundError extends ExpressError {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Not Found\";\n    super(message, 404);\n  }\n}\n\n/** 401 UNAUTHORIZED error. */\n\nclass UnauthorizedError extends ExpressError {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unauthorized\";\n    super(message, 401);\n  }\n}\n\n/** 400 BAD REQUEST error. */\n\nclass BadRequestError extends ExpressError {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Bad Request\";\n    super(message, 400);\n  }\n}\n\n/** 403 BAD REQUEST error. */\n\nclass ForbiddenError extends ExpressError {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Bad Request\";\n    super(message, 403);\n  }\n}\nmodule.exports = {\n  ExpressError,\n  NotFoundError,\n  UnauthorizedError,\n  BadRequestError,\n  ForbiddenError\n};","map":{"version":3,"names":["ExpressError","Error","constructor","message","status","NotFoundError","arguments","length","undefined","UnauthorizedError","BadRequestError","ForbiddenError","module","exports"],"sources":["/Users/max/Desktop/Code/react-jobly/backend/expressError.js"],"sourcesContent":["/** ExpressError extends normal JS error so we can\n *  add a status when we make an instance of it.\n *\n *  The error-handling middleware will return this.\n */\n\nclass ExpressError extends Error {\n  constructor(message, status) {\n    super();\n    this.message = message;\n    this.status = status;\n  }\n}\n\n/** 404 NOT FOUND error. */\n\nclass NotFoundError extends ExpressError {\n  constructor(message = \"Not Found\") {\n    super(message, 404);\n  }\n}\n\n/** 401 UNAUTHORIZED error. */\n\nclass UnauthorizedError extends ExpressError {\n  constructor(message = \"Unauthorized\") {\n    super(message, 401);\n  }\n}\n\n/** 400 BAD REQUEST error. */\n\nclass BadRequestError extends ExpressError {\n  constructor(message = \"Bad Request\") {\n    super(message, 400);\n  }\n}\n\n/** 403 BAD REQUEST error. */\n\nclass ForbiddenError extends ExpressError {\n  constructor(message = \"Bad Request\") {\n    super(message, 403);\n  }\n}\n\nmodule.exports = {\n  ExpressError,\n  NotFoundError,\n  UnauthorizedError,\n  BadRequestError,\n  ForbiddenError,\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,YAAY,SAASC,KAAK,CAAC;EAC/BC,WAAWA,CAACC,OAAO,EAAEC,MAAM,EAAE;IAC3B,KAAK,CAAC,CAAC;IACP,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;AACF;;AAEA;;AAEA,MAAMC,aAAa,SAASL,YAAY,CAAC;EACvCE,WAAWA,CAAA,EAAwB;IAAA,IAAvBC,OAAO,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,WAAW;IAC/B,KAAK,CAACH,OAAO,EAAE,GAAG,CAAC;EACrB;AACF;;AAEA;;AAEA,MAAMM,iBAAiB,SAAST,YAAY,CAAC;EAC3CE,WAAWA,CAAA,EAA2B;IAAA,IAA1BC,OAAO,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,cAAc;IAClC,KAAK,CAACH,OAAO,EAAE,GAAG,CAAC;EACrB;AACF;;AAEA;;AAEA,MAAMO,eAAe,SAASV,YAAY,CAAC;EACzCE,WAAWA,CAAA,EAA0B;IAAA,IAAzBC,OAAO,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,aAAa;IACjC,KAAK,CAACH,OAAO,EAAE,GAAG,CAAC;EACrB;AACF;;AAEA;;AAEA,MAAMQ,cAAc,SAASX,YAAY,CAAC;EACxCE,WAAWA,CAAA,EAA0B;IAAA,IAAzBC,OAAO,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,aAAa;IACjC,KAAK,CAACH,OAAO,EAAE,GAAG,CAAC;EACrB;AACF;AAEAS,MAAM,CAACC,OAAO,GAAG;EACfb,YAAY;EACZK,aAAa;EACbI,iBAAiB;EACjBC,eAAe;EACfC;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}