{"ast":null,"code":"var _jsxFileName = \"/Users/max/Desktop/Code/react-jobly/src/jobs/JobCard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport UserContext from \"../auth/UserContext\";\nimport \"./JobCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobCard = _ref => {\n  _s();\n  let {\n    id,\n    companyName,\n    title,\n    salary,\n    equity\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const {\n    applyToJob\n  } = useContext(UserContext);\n  const [applied, setApplied] = useState();\n\n  // apply to a job.\n  async function handleApply() {\n    applyToJob(id);\n    setApplied(true);\n  }\n\n  // set applied for job's buttons to disabled.\n  if (currentUser.applications.includes(id)) {\n    console.log(id);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JobCard card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: [title, \" @ \", companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Salary: $\", salary !== null && salary !== void 0 ? salary : 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Equity: \", equity !== null && equity !== void 0 ? equity : \"0\", \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleApply,\n        disabled: applied,\n        className: \"btn font-weight-bold text-uppercase float-right\",\n        children: applied ? \"Applied\" : \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(JobCard, \"zbF+muG4hdRWDIsdjTRyjQ16pnU=\");\n_c = JobCard;\nexport default JobCard;\nvar _c;\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"names":["React","useContext","useState","UserContext","jsxDEV","_jsxDEV","JobCard","_ref","_s","id","companyName","title","salary","equity","currentUser","applyToJob","applied","setApplied","handleApply","applications","includes","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/max/Desktop/Code/react-jobly/src/jobs/JobCard.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport UserContext from \"../auth/UserContext\";\nimport \"./JobCard.css\";\n\nconst JobCard = ({ id, companyName, title, salary, equity }) => {\n  const { currentUser } = useContext(UserContext);\n  const { applyToJob } = useContext(UserContext);\n  const [applied, setApplied] = useState();\n\n  // apply to a job.\n  async function handleApply() {\n    applyToJob(id);\n    setApplied(true);\n  }\n\n  // set applied for job's buttons to disabled.\n  if (currentUser.applications.includes(id)) {\n    console.log(id);\n  }\n\n  return (\n    <div className=\"JobCard card\" key={id}>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">\n          {title} @ {companyName}\n        </h5>\n        <div>Salary: ${salary ?? 0}</div>\n        <div>Equity: {equity ?? \"0\"}%</div>\n        <button\n          onClick={handleApply}\n          disabled={applied}\n          className=\"btn font-weight-bold text-uppercase float-right\"\n        >\n          {applied ? \"Applied\" : \"Apply\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default JobCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGC,IAAA,IAAgD;EAAAC,EAAA;EAAA,IAA/C;IAAEC,EAAE;IAAEC,WAAW;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAAN,IAAA;EACzD,MAAM;IAAEO;EAAY,CAAC,GAAGb,UAAU,CAACE,WAAW,CAAC;EAC/C,MAAM;IAAEY;EAAW,CAAC,GAAGd,UAAU,CAACE,WAAW,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC;;EAExC;EACA,eAAegB,WAAWA,CAAA,EAAG;IAC3BH,UAAU,CAACN,EAAE,CAAC;IACdQ,UAAU,CAAC,IAAI,CAAC;EAClB;;EAEA;EACA,IAAIH,WAAW,CAACK,YAAY,CAACC,QAAQ,CAACX,EAAE,CAAC,EAAE;IACzCY,OAAO,CAACC,GAAG,CAACb,EAAE,CAAC;EACjB;EAEA,oBACEJ,OAAA;IAAKkB,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BnB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBnB,OAAA;QAAIkB,SAAS,EAAC,YAAY;QAAAC,QAAA,GACvBb,KAAK,EAAC,KAAG,EAACD,WAAW;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACLvB,OAAA;QAAAmB,QAAA,GAAK,WAAS,EAACZ,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,CAAC;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjCvB,OAAA;QAAAmB,QAAA,GAAK,UAAQ,EAACX,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,GAAG,EAAC,GAAC;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnCvB,OAAA;QACEwB,OAAO,EAAEX,WAAY;QACrBY,QAAQ,EAAEd,OAAQ;QAClBO,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAE1DR,OAAO,GAAG,SAAS,GAAG;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,GAd2BnB,EAAE;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAehC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAlCIF,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAoCb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}