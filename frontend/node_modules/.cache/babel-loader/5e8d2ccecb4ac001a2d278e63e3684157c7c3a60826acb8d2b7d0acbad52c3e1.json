{"ast":null,"code":"var _jsxFileName = \"/Users/max/Desktop/Code/react-jobly/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport JoblyApi from \"./api\";\nimport NavBar from \"./navbar/NavBar\";\nimport RoutesList from \"./routes/Routes\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport UserContext from \"./auth/UserContext\";\nimport Loading from \"./helpers/Loading\";\nimport { decodeToken } from \"react-jwt\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport \"./App.css\";\n\n// key for localStorage.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TOKEN_KEY = \"jobly-token\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_KEY);\n  const [appliedFor, setAppliedFor] = useState(new Set([]));\n\n  // signup method.\n  async function signup(signupData) {\n    try {\n      let token = await JoblyApi.signup(signupData);\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return {\n        success: false,\n        errors\n      };\n    }\n  }\n\n  // login method.\n  async function login(loginData) {\n    try {\n      let token = await JoblyApi.login(loginData);\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return {\n        success: false,\n        errors\n      };\n    }\n  }\n\n  // logout method.\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  // load user info from API when token changes.\n  useEffect(function loadUser() {\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let {\n            username\n          } = decodeToken(token);\n          // console.log(\"username: \" + username);\n          // put the token on the Api class so it can use it to call the API.\n          JoblyApi.token = token;\n          let currentUser = await JoblyApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n        } catch (err) {\n          console.error(\"problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setIsLoading(false);\n    }\n\n    // show loading screen until effect gets user.\n    setIsLoading(true);\n    getCurrentUser();\n  }, [token]);\n  const applyToJob = id => {\n    console.log(\"applying to job\");\n    JoblyApi.applyToJob(currentUser.username, id);\n    setAppliedFor(new Set([...appliedFor, id]));\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        currentUser,\n        setCurrentUser,\n        applyToJob\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          logout: logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoutesList, {\n          login: login,\n          signup: signup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FY1O5eJo2m/kpqwHGpUBq0ymZ70=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","JoblyApi","NavBar","RoutesList","BrowserRouter","UserContext","Loading","decodeToken","useLocalStorage","jsxDEV","_jsxDEV","TOKEN_KEY","App","_s","isLoading","setIsLoading","currentUser","setCurrentUser","token","setToken","appliedFor","setAppliedFor","Set","signup","signupData","success","errors","console","error","login","loginData","logout","loadUser","getCurrentUser","username","err","applyToJob","id","log","fileName","_jsxFileName","lineNumber","columnNumber","children","Provider","value","className","_c","$RefreshReg$"],"sources":["/Users/max/Desktop/Code/react-jobly/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport JoblyApi from \"./api\";\nimport NavBar from \"./navbar/NavBar\";\nimport RoutesList from \"./routes/Routes\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport UserContext from \"./auth/UserContext\";\nimport Loading from \"./helpers/Loading\";\nimport { decodeToken } from \"react-jwt\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport \"./App.css\";\n\n// key for localStorage.\nexport const TOKEN_KEY = \"jobly-token\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_KEY);\n  const [appliedFor, setAppliedFor] = useState(new Set([]));\n\n  // signup method.\n  async function signup(signupData) {\n    try {\n      let token = await JoblyApi.signup(signupData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  // login method.\n  async function login(loginData) {\n    try {\n      let token = await JoblyApi.login(loginData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  // logout method.\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  // load user info from API when token changes.\n  useEffect(\n    function loadUser() {\n      async function getCurrentUser() {\n        if (token) {\n          try {\n            let { username } = decodeToken(token);\n            // console.log(\"username: \" + username);\n            // put the token on the Api class so it can use it to call the API.\n            JoblyApi.token = token;\n            let currentUser = await JoblyApi.getCurrentUser(username);\n            setCurrentUser(currentUser);\n          } catch (err) {\n            console.error(\"problem loading\", err);\n            setCurrentUser(null);\n          }\n        }\n        setIsLoading(false);\n      }\n\n      // show loading screen until effect gets user.\n      setIsLoading(true);\n      getCurrentUser();\n    },\n    [token]\n  );\n\n  const applyToJob = (id) => {\n    console.log(\"applying to job\");\n    JoblyApi.applyToJob(currentUser.username, id);\n    setAppliedFor(new Set([...appliedFor, id]));\n  };\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <BrowserRouter>\n      <UserContext.Provider value={{ currentUser, setCurrentUser, applyToJob }}>\n        <div className=\"App\">\n          <NavBar logout={logout} />\n          <RoutesList login={login} signup={signup} />\n        </div>\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}