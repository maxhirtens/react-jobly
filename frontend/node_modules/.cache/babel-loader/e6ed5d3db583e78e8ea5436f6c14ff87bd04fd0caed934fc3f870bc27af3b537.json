{"ast":null,"code":"var _jsxFileName = \"/Users/max/Desktop/Code/react-jobly/src/companies/CompanyDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport JoblyApi from \"../api\";\nimport JobCard from \"../jobs/JobCard\";\nimport Loading from \"../helpers/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyDetails = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [company, setCompany] = useState(null);\n  useEffect(function getCompanyAndJobsForUser() {\n    async function getCompany() {\n      setCompany(await JoblyApi.getCompany(name));\n    }\n    getCompany();\n  }, [name]);\n  if (!company) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"CompanyJobCards col-md-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: company.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: company.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\"Jobs:\", company.jobs.map(j => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(JobCard, {\n          companyName: company.name,\n          title: j.title,\n          equity: j.equity,\n          salary: j.salary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 32\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyDetails, \"+QpYSc2JIVkAnc1QCnGziSMxb+U=\", false, function () {\n  return [useParams];\n});\n_c = CompanyDetails;\nexport default CompanyDetails;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","JoblyApi","JobCard","Loading","jsxDEV","_jsxDEV","CompanyDetails","_s","name","company","setCompany","getCompanyAndJobsForUser","getCompany","fileName","_jsxFileName","lineNumber","columnNumber","className","children","description","jobs","map","j","companyName","title","equity","salary","_c","$RefreshReg$"],"sources":["/Users/max/Desktop/Code/react-jobly/src/companies/CompanyDetails.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport JoblyApi from \"../api\";\nimport JobCard from \"../jobs/JobCard\";\nimport Loading from \"../helpers/Loading\";\n\nconst CompanyDetails = () => {\n  const { name } = useParams();\n\n  const [company, setCompany] = useState(null);\n\n  useEffect(function getCompanyAndJobsForUser() {\n    async function getCompany() {\n      setCompany(await JoblyApi.getCompany(name));\n    }\n\n    getCompany();\n  }, [name]);\n\n  if (!company) return <Loading />;\n\n  return (\n    <section className=\"CompanyJobCards col-md-8\">\n      <h3>{company.name}</h3>\n      <p>{company.description}</p>\n      <ul>Jobs: \n        {company.jobs.map(j => <li><JobCard\n          companyName={company.name}\n          title={j.title}\n          equity={j.equity}\n          salary={j.salary}\n        /></li>)}\n      </ul>\n      \n    </section>\n  );\n}\n\nexport default CompanyDetails;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAK,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE5B,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,SAASa,wBAAwBA,CAAA,EAAG;IAC5C,eAAeC,UAAUA,CAAA,EAAG;MAC1BF,UAAU,CAAC,MAAMT,QAAQ,CAACW,UAAU,CAACJ,IAAI,CAAC,CAAC;IAC7C;IAEAI,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,IAAI,CAACC,OAAO,EAAE,oBAAOJ,OAAA,CAACF,OAAO;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEhC,oBACEX,OAAA;IAASY,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBAC3Cb,OAAA;MAAAa,QAAA,EAAKT,OAAO,CAACD;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBX,OAAA;MAAAa,QAAA,EAAIT,OAAO,CAACU;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BX,OAAA;MAAAa,QAAA,GAAI,OACF,EAACT,OAAO,CAACW,IAAI,CAACC,GAAG,CAACC,CAAC,iBAAIjB,OAAA;QAAAa,QAAA,eAAIb,OAAA,CAACH,OAAO;UACjCqB,WAAW,EAAEd,OAAO,CAACD,IAAK;UAC1BgB,KAAK,EAAEF,CAAC,CAACE,KAAM;UACfC,MAAM,EAAEH,CAAC,CAACG,MAAO;UACjBC,MAAM,EAAEJ,CAAC,CAACI;QAAO;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEd,CAAC;AAAAT,EAAA,CA9BKD,cAAc;EAAA,QACDN,SAAS;AAAA;AAAA2B,EAAA,GADtBrB,cAAc;AAgCpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}